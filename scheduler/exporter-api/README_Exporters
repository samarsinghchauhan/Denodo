# ########################################################################
#                       Scheduler - Samples README                       #
#                      (c) Denodo Technologies - 2014                    #
# ########################################################################

  Important note: For compiling and testing the samples, JDK 1.8 or higher
    is required. The JAVA_HOME environment variable must be correctly set 
    or the JDK bin directory must be in the PATH. 

* Exporter Development Sample.
    Denodo Scheduler exporters enable different ways to export the information
    extracted from different sources.
    
    Scheduler can be extended in order to satisfy more specific user needs. 
    New exporters can be added to Scheduler. 
    These system extensions must be added by using the web administration tool 
    (Plugins Management section) and they will be placed at the plugins folder in
    the installation directory. This process must be done in this way (using the web
    administration tool); not copying directly the plugin to the destination folder,
    in order to be automatically detected by Scheduler.
    
    An example of how to create new exporters can be found at 
    %DENODO_HOME%\samples\scheduler\exporter-api. The new exporter 
    is "XMLCustomExporter", which generates an XML file (without a root element)
    containing the extracted information. It must be configured with two
    parameters:
    
         - "Output XML file absolute path": The absolute path to the desired
           output file.
         - "Export job identifier, job name ...": If checked, this option will
           force XMLCustomExporter to export several fields (job identifier,
           job name, job start time ...) which are always generated by every 
           extraction job.

    To compile and generate XMLCustomExporter, please use the following 
    compilation scripts:
      
    + Compilation scripts:
         - compile_exporterexample
         
    + Generate library (jar file) with the exporter that will be used
      by Scheduler
         - generate_exporterexample